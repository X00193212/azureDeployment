name: Deploy fe service

on:
  workflow_dispatch:
  
env:
  DB_CONNECTION_STRING: '${{ secrets.DB_CONNECTION_STRING }}'

jobs:
  deploy-fe-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v1

      - run: |
          echo '${{ env.DB_CONNECTION_STRING }}'
          set -x
          docker version
          docker run hello-world

      - name: create a docker image of fe service
        run: |
          cd ./EAD_FE_CA1_2023
          ls
          docker image build -t fe-service-ca2-prod-1:v2 -f Dockerfile .
          docker tag fe-service-ca2-prod-1:v2 ca2acrx00193212.azurecr.io/fe-service-ca2-prod-1:v2
          

      - uses: azure/setup-kubectl@v2.0

      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: push image to acr
        run: |
          az acr login --name ca2acrx00193212 
          docker push ca2acrx00193212.azurecr.io/fe-service-ca2-prod-1:v2    

      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: kubeconf file generation
        run: |
          az aks get-credentials --resource-group my-resource-group --name AKSCluster

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: deploy image from acr to aks
        run: |
          cd ./EAD_FE_CA1_2023
          kubectl apply -f create-nodejs-service-manifest.yaml -n prod

